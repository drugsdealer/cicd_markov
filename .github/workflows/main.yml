name: Stage Store CI/CD Full

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  # 1) –¢–µ—Å—Ç—ã
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps (optional)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, skipping"
          fi

      - name: Dummy tests
        run: echo "Tests passed"

      - name: "Add PR label test-passed"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: test-passed

  # 2) Security
  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install safety & flake8
        run: |
          python -m pip install --upgrade pip
          pip install safety flake8 || true

      - name: Safety scan
        run: safety check || true

      - name: Lint (flake8)
        run: flake8 . || true

      - name: "Add PR label sec-passed"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: sec-passed

  # 3) –í–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (minor –¥–ª—è feature/*, –∏–Ω–∞—á–µ patch)
  version:
    name: Update Version
    runs-on: ubuntu-latest
    needs: security
    outputs:
      new_version: ${{ steps.bump.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read current version
        id: readver
        run: |
          if [ -f version ]; then
            CURR=$(cat version)
          else
            CURR="0.1.0"
            echo "$CURR" > version
          fi
          echo "current_version=$CURR" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: |
          OLD=${{ steps.readver.outputs.current_version }}
          IFS='.' read -r MAJ MIN PATCH <<< "$OLD"
          if [[ "${GITHUB_REF}" == refs/heads/feature/* ]]; then
            MIN=$((MIN + 1))
          else
            PATCH=$((PATCH + 1))
          fi
          NEW="$MAJ.$MIN.$PATCH"
          echo "$NEW" > version
          echo "new_version=$NEW" >> $GITHUB_OUTPUT
          echo "Updated: $OLD -> $NEW"

      - name: Commit version file
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version
          git commit -m "version: ${{ steps.bump.outputs.new_version }} <- ${{ steps.readver.outputs.current_version }}" || true
          git push || true

      - name: "Add PR label version-updated"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: version-updated

  # 4) –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ CHANGELOG.md + –∞—Ä—Ç–µ—Ñ–∞–∫—Ç + –ª–µ–π–±–ª 'changelog'
  changelog:
    name: Generate CHANGELOG
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build changelog entry
        id: buildlog
        run: |
          V="v${{ needs.version.outputs.new_version }}"
          DATE="$(date +'%Y-%m-%d %H:%M')"
          BRANCH="${GITHUB_REF_NAME}"
          MSG="$(git log -1 --pretty=%s)"
          SHA="$(git rev-parse --short HEAD)"

          {
            echo "## ${V} ‚Äî ${DATE}"
            echo "- Branch: ${BRANCH}"
            echo "- Commit: ${SHA} ‚Äî ${MSG}"
            echo
          } > .changelog_entry

          if [ -f CHANGELOG.md ]; then
            cat .changelog_entry CHANGELOG.md > .tmp && mv .tmp CHANGELOG.md
          else
            mv .changelog_entry CHANGELOG.md
          fi

          echo "tag=${V}" >> $GITHUB_OUTPUT

      - name: Commit changelog
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "changelog: ${{ steps.buildlog.outputs.tag }}" || true
          git push || true

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md

      - name: "Add PR label changelog"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: changelog

  # 5) –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ DockerHub + –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è/README + –ª–µ–π–±–ª 'dockerhub'
  dockerhub:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: [version, changelog]
    env:
      DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
      VERSION_TAG: v${{ needs.version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_REPO }}:${{ env.VERSION_TAG }}
            ${{ env.DOCKER_REPO }}:latest

      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ env.DOCKER_REPO }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: README.md

      - name: "Add PR label dockerhub"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: dockerhub

  # 6) –ù–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Telegram —Å –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω—ã–º CHANGELOG.md
  notify:
    name: Notify Telegram
    runs-on: ubuntu-latest
    needs: dockerhub
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Download changelog artifact
        uses: actions/download-artifact@v4
        with:
          name: changelog
          path: artifacts

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚úÖ –í—ã–ø—É—â–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: v${{ needs.version.outputs.new_version }}
            üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: ${{ github.repository }}
            üîÄ –í–µ—Ç–∫–∞: ${{ github.ref_name }}
            üßæ CHANGELOG –ø—Ä–∏–ª–æ–∂–µ–Ω —Ñ–∞–π–ª–æ–º
            üê≥ DockerHub: https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}/tags
            ‚ñ∂Ô∏è Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          document: artifacts/CHANGELOG.md
