name: Stage Store CI/CD Full

on:
  push:
    branches: [ main, feature/*, hotfix/* ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  # 1️⃣ Тестирование
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          echo "🔧 Устанавливаем зависимости..."
          pip install -r requirements.txt || echo "requirements.txt не найден, пропускаем"

      - name: Run dummy tests
        run: |
          echo "✅ Тесты успешно пройдены!"
          echo "test passed"

      - name: Add PR label: test-passed
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: test-passed

  # 2️⃣ Проверка безопасности
  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Run Safety (проверка уязвимостей)
        run: |
          echo "🛡 Проверяем зависимости на уязвимости..."
          pip install safety || echo "safety не установлен"
          safety check || echo "⚠️ Уязвимости найдены (демо-режим)"

      - name: Run Linter (безопасность кода)
        run: |
          pip install flake8 || echo "flake8 не установлен"
          echo "🧹 Запускаем линтер..."
          flake8 . || echo "⚠️ Ошибки линтинга (демо-режим)"

      - name: Add PR label: sec-passed
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: sec-passed

  # 3️⃣ Апдейт версии
  version:
    name: Update Version
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v3

      - name: Read current version
        id: version
        run: |
          echo "📖 Читаем текущую версию..."
          if [ -f version ]; then
            cat version
            echo "current_version=$(cat version)" >> $GITHUB_OUTPUT
          else
            echo "0.1.0" > version
            echo "current_version=0.1.0" >> $GITHUB_OUTPUT
          fi

      - name: Calculate new version
        id: bump
        run: |
          echo "🧮 Вычисляем новую версию..."
          old=${{ steps.version.outputs.current_version }}
          major=$(echo $old | cut -d. -f1)
          minor=$(echo $old | cut -d. -f2)
          patch=$(echo $old | cut -d. -f3)
          if [[ "${{ github.ref }}" == *"feature"* ]]; then
            minor=$((minor + 1))
          else
            patch=$((patch + 1))
          fi
          new="$major.$minor.$patch"
          echo "new_version=$new" >> $GITHUB_OUTPUT
          echo $new > version
          echo "🔖 Новая версия: $new"

      - name: Commit new version
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version
          git commit -m "🔼 Version bump: ${{ steps.bump.outputs.new_version }} <- ${{ steps.version.outputs.current_version }}"
          git push

      - name: Add PR label: version-updated
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: version-updated
