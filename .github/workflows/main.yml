name: Stage Store CI/CD Full

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  # 1) Тестирование
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps (optional)
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "requirements.txt not found, skipping"
          fi

      - name: Dummy tests
        run: echo "Tests passed"

      - name: Add PR label: test-passed
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: test-passed

  # 2) Проверка безопасности
  security:
    name: Security Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install safety & flake8
        run: |
          python -m pip install --upgrade pip
          pip install safety flake8 || true

      - name: Safety scan
        run: safety check || true

      - name: Lint (flake8)
        run: flake8 . || true

      - name: Add PR label: sec-passed
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: sec-passed

  # 3) Апдейт версии
  version:
    name: Update Version
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read current version
        id: readver
        shell: bash
        run: |
          if [ -f version ]; then
            CURR=$(cat version)
          else
            CURR="0.1.0"
            echo "$CURR" > version
          fi
          echo "current_version=$CURR" >> "$GITHUB_OUTPUT"

      - name: Bump version
        id: bump
        shell: bash
        run: |
          OLD="${{ steps.readver.outputs.current_version }}"
          IFS='.' read -r MAJ MIN PATCH <<< "$OLD"
          # feature/* -> minor++, иначе patch++
          if [[ "${GITHUB_REF}" == refs/heads/feature/* ]]; then
            MIN=$((MIN + 1))
          else
            PATCH=$((PATCH + 1))
          fi
          NEW="$MAJ.$MIN.$PATCH"
          echo "$NEW" > version
          echo "new_version=$NEW" >> "$GITHUB_OUTPUT"

      - name: Commit version file
        shell: bash
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add version
          git commit -m "Version: ${{ steps.bump.outputs.new_version }} <- ${{ steps.readver.outputs.current_version }}" || true
          git push || true

      - name: Add PR label: version-updated
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: version-updated
